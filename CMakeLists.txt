project(AshEdit)
cmake_minimum_required(VERSION 2.6)

option(MO2 "Build for Monster RPG 2 format levels" off)
option(MO3 "Build for MO3" off)
option(TGA "Use .tga tile sheets" off)
option(USE_8X8 "Use 8x8 tiles" off)

if(NOT ("${USER_INCLUDE_PATH}" STREQUAL ""))
	include_directories(${USER_INCLUDE_PATH})
endif(NOT ("${USER_INCLUDE_PATH}" STREQUAL ""))
if(NOT ("${USER_LIBRARY_PATH}" STREQUAL ""))
	link_directories(${USER_LIBRARY_PATH})
endif(NOT ("${USER_LIBRARY_PATH}" STREQUAL ""))

include_directories("include")

set(ASHEDIT_SRC src/main.cpp src/general.cpp)

set(FLAGS "")

if(WIN32)
	if(MO2)
		set(FLAGS "${FLAGS} /DMO2")
	endif()
	if(MO3)
		set(FLAGS "${FLAGS} /DMO3 /DSUPPORT_GROUPS")
	endif()
	if(TGA)
		set(FLAGS "${FLAGS} /DUSE_TGA")
	endif()
	if(USE_8X8)
		set(FLAGS "${FLAGS} /DUSE_8X8")
		set(FLAGS "${FLAGS} /DSCALE=6")
	endif()

	if(CMAKE_BUILD_TYPE MATCHES Debug)
		set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} ${FLAGS} /MTd")
	else()
		set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} ${FLAGS} /MT")
	endif()
	list(APPEND ASHEDIT_SRC "src/icon.rc")
	add_executable(AshEdit WIN32 ${ASHEDIT_SRC})
	if(CMAKE_BUILD_TYPE MATCHES Debug)
		target_link_libraries(AshEdit "tgui2d" "allegro_monolith-debug" "freetype_static" "zlibstatic" "opengl32" "winmm" "psapi" "shlwapi" "gdiplus")
	else()
		target_link_libraries(AshEdit "tgui2" "allegro_monolith-static" "freetype_static" "zlibstatic" "opengl32" "winmm" "psapi" "shlwapi" "gdiplus")
	endif()
else()
	if(NOT MO3 AND MO2)
		set(FLAGS "${FLAGS} -DMO2")
	endif()
	if(MO3 OR TGA)
		set(FLAGS "${FLAGS} -DUSE_TGA")
	endif()
	if(MO3)
		set(FLAGS "${FLAGS} -DMO3 -DSUPPORT_GROUPS")
	endif()
	if(USE_8X8)
		set(FLAGS "${FLAGS} -DUSE_8X8")
	endif()
	if(CMAKE_BUILD_TYPE MATCHES Debug)
		set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} ${FLAGS}")
	else()
		set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} ${FLAGS}")
	endif()
	add_executable(AshEdit ${ASHEDIT_SRC})

	set(LIBRARIES "tgui2" "allegro_monolith-static")

	if(APPLE)
		set_target_properties(AshEdit PROPERTIES LINK_FLAGS "-framework Foundation -framework OpenGL -framework Cocoa -framework IOKit")
		list(APPEND LIBRARIES "freetype")
	else()
		include(FindPkgConfig)
		pkg_check_modules(GTK gtk+-2.0)
		pkg_check_modules(GT gthread-2.0)
		if(GTK_FOUND AND GT_FOUND)
			include_directories(${GTK_INCLUDE_DIRS} ${GT_INCLUDE_DIRS})
			list(APPEND LIBRARIES ${GTK_LIBRARIES} ${GT_LIBRARIES})
		else()
			message(FATAL_ERROR "ERROR: GTK development libraries not found!")
		endif()
		link_directories("/usr/lib/x86_64-linux-gnu")
		list(APPEND LIBRARIES "png" "GL" "Xcursor" "Xrandr" "Xi" "Xinerama" "X11" "pthread")
	endif()

	target_link_libraries(AshEdit ${LIBRARIES})
endif()
